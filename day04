一、Pandas函数应用
1.
pipe()
df = pd.DataFrame(np.random.randn(5,3),columns=['col1','col2','col3'])
df.pipe(adder,2)print df
2、
显示如何使用字典，行索引和列索引列表创建数据帧(DataFrame)
data = [{'a': 1, 'b': 2},{'a': 5, 'b': 10, 'c': 20}]
#With two column indices, values same as dictionary keys
df1 = pd.DataFrame(data, index=['first', 'second'],
columns=['a', 'b']）

二、Pandas重建索引
1.
df.reindex(index=[0,2,5], columns=['A', 'C', 'B'])
df = pd.DataFrame({
'A': pd.date_range(start='2016-01-01',periods=N,freq='D'),
'x': np.linspace(0,stop=N-1,num=N),
'y': np.random.rand(N),
'C': np.random.choice(['Low','Medium','High'],N).tolist(),
'D': np.random.normal(100, 10, size=(N)).tolist()})
#reindex the DataFrame
df_reindexed = df.reindex(index=[0,2,5], columns=['A', 'C', 'B'])
2、
df1.reindex_like(df2) 有时可能希望采取一个对象和重新索引，其轴被标记为与另一个对象相同，让df1的格式匹配到df2的格式。
df1 = pd.DataFrame(np.random.randn(10,3),columns=['col1','col2','col3'])
df2 = pd.DataFrame(np.random.randn(7,3),columns=['col1','col2','col3'])
df1 = df1.reindex_like(df2)print df1
3、
reindex()：pad/ffill - 向前填充值bfill/backfill - 向后填充值nearest - 从最近的索引值填充
df1 = pd.DataFrame(np.random.randn(6,3),columns=['col1','col2','col3'])
df2 = pd.DataFrame(np.random.randn(2,3),columns=['col1','col2','col3'])
# Padding NAN'sprint df2.reindex_like(df1)
# Now Fill the NAN's with preceding Valuesprint ("Data Frame with Forward Fill:")print df2.reindex_like(df1,method='ffill')
print df2.reindex_like(df1,method='ffill',limit=1)（limit限制填充的行数）
4、
rename()方法允许基于一些映射(字典或者系列)或任意函数来重新标记一个轴。
看看下面的例子来理解这一概念。
df1 = pd.DataFrame(np.random.randn(6,3),columns=['col1','col2','col3'])print df1
print ("After renaming the rows and columns:")print df1.rename(columns={'col1' : 'c1', 'col2' : 'c2'},
index = {0 : 'apple', 1 : 'banana', 2 : 'durian'})


三、Pandas迭代
1.
iteritems()示例
df = pd.DataFrame(np.random.randn(4,3),columns=['col1','col2','col3'])for key,value in df.iteritems():
print (key,value)
2、
iterrows()返回迭代器，产生每个索引值以及包含每行数据的序列
df = pd.DataFrame(np.random.randn(4,3),columns = ['col1','col2','col3'])for row_index,row in df.iterrows():
print (row_index,row)
3、
itertuples()方法将为DataFrame中的每一行返回一个产生一个命名元组的迭代器。元组的第一个元素将是行的相应索引值，而剩余的值是行值。
df = pd.DataFrame(np.random.randn(4,3),columns = ['col1','col2','col3'])
for row in df.itertuples():
print (row)
